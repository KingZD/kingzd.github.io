[{"title":"Xposed 入坑篇","date":"2018-06-28T08:31:43.074Z","path":"2018/06/28/Xposed 入坑篇/","text":"近些日子，受到高人指点，突然想入坑学习学习 Xposed 于是乎在网上搜集一些入门例子 其中遇到了些小问题 记录下来 可能帮助同样遇到此问题的你https://www.52pojie.cn/thread-690818-1-1.htmlhttp://www.freebuf.com/articles/web/156944.htmlhttps://www.jianshu.com/p/8fbf9e88eb54 （@WrBug）https://www.52pojie.cn/thread-533120-1-1.html深受启发，于是乎想自己按照教程来写写。同时感谢以上几位大佬的教程 首先我安装了比较新的XposedInstaller_3.1.5.apk安装成功后如下图 接下来开始敲代码了 美滋滋(皮一下很开心) 上一张整个工程的图 以下是Test和Tutorial的代码12345678910111213141516package com.zed.xposed.demo;import de.robv.android.xposed.IXposedHookLoadPackage;import de.robv.android.xposed.XposedBridge;import de.robv.android.xposed.callbacks.XC_LoadPackage;/** * Created by zed on 2018/4/11. */public class Test implements IXposedHookLoadPackage &#123; @Override public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable &#123; XposedBridge.log(&quot;Loaded Test app: &quot; + lpparam.packageName); &#125;&#125; 因为我在学习kotlin 所以后面应该会有两个版本代码123456789101112131415package com.zed.xposed.demo/** * Created by zed on 2018/4/11. */import de.robv.android.xposed.IXposedHookLoadPackage;import de.robv.android.xposed.XposedBridge;import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;open class Tutorial : IXposedHookLoadPackage &#123; override fun handleLoadPackage(lpparam: LoadPackageParam?) &#123; XposedBridge.log(&quot;Loaded app: &quot; + lpparam?.packageName); &#125;&#125; 新建xposed_init的文本文档 里面只用声明下你的两个类文件 包名+类名com.zed.xposed.demo.Tutorialcom.zed.xposed.demo.Test 最后是清单文件1234567891011121314151617181920212223242526272829303132&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.zed.xposed.demo&quot;&gt; &lt;application android:allowBackup=&quot;true&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:label=&quot;@string/app_name&quot; android:roundIcon=&quot;@mipmap/ic_launcher_round&quot; android:supportsRtl=&quot;true&quot; android:theme=&quot;@style/AppTheme&quot;&gt; &lt;meta-data android:name=&quot;xposedmodule&quot; android:value=&quot;true&quot; /&gt; &lt;meta-data android:name=&quot;xposeddescription&quot; android:value=&quot;Hook log test&quot; /&gt; &lt;meta-data android:name=&quot;xposedminversion&quot; android:value=&quot;82&quot; /&gt; &lt;activity android:name=&quot;.MainActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; build.gradle配置1234dependencies &#123; compile &apos;de.robv.android.xposed:api:82&apos; compile &apos;de.robv.android.xposed:api:82:sources&apos;&#125; 一切都在美好的方向了 build一下安装 重启后 打开了之后 ？？？ What Fuck (me is 逗比) Android Studio (Gradle-based)The Xposed Framework API is published on Bintray/jCenter: https://bintray.com/rovo89/de.robv.android.xposed/apiThat makes it easy to reference it by simply adding a Gradle dependency in your app/build.gradle: 1234567repositories &#123; jcenter();&#125;dependencies &#123; provided &apos;de.robv.android.xposed:api:82&apos;&#125; It is very important that you use provided instead of compile! The latter would include the API classes in your APK, which can cause issues especially on Android 4.x. Using provided just makes the API classes usable from your module, but there will only be references to them in the APK. The actual implementation will be provided when the user installs the Xposed Framework. In most cases, the repositories block already exists, and there are usually some dependencies already. In that case, you just need to add the provided line to the existing dependencies block. There is also documentation available for the API (see below). Unfortunately, I didn’t find any good way to enable automatic download of the API sources, except using both of these lines: 12provided &apos;de.robv.android.xposed:api:82&apos;provided &apos;de.robv.android.xposed:api:82:sources&apos; The way Gradle caches the files, Android Studio will set up the second jar as source for the first one automatically. Better recommendations are welcome! Please make sure to disable Instant Run (File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Instant Run), otherwise your classes aren’t included directly in the APK, but loaded via a stub application which Xposed can’t handle. 赶紧把手捂住脸 偷偷修改下app/build.gradle下的依赖引用还有个错误情况就是 你只引用了1compile &apos;de.robv.android.xposed:api:82&apos; 也会出现一个错误 日志内容如下1234567891011121314151604-11 22:36:23.839 I/Xposed ( 3386): -----------------04-11 22:36:23.839 I/Xposed ( 3386): Starting Xposed version 89, compiled for SDK 2104-11 22:36:23.839 I/Xposed ( 3386): Device: Custom Phone - 5.0.0 - API 21 - 768x1280 (unknown), Android version 5.0 (SDK 21)04-11 22:36:23.839 I/Xposed ( 3386): ROM: vbox86p-userdebug 5.0 LRX21M 17 test-keys04-11 22:36:23.839 I/Xposed ( 3386): Build fingerprint: generic/vbox86p/vbox86p:5.0/LRX21M/17:userdebug/test-keys04-11 22:36:23.839 I/Xposed ( 3386): Platform: x86, 32-bit binary, system server: yes04-11 22:36:23.839 I/Xposed ( 3386): SELinux enabled: no, enforcing: no04-11 22:36:26.060 I/Xposed ( 3386): -----------------04-11 22:36:26.060 I/Xposed ( 3386): Added Xposed (/system/framework/XposedBridge.jar) to CLASSPATH04-11 22:36:26.084 I/Xposed ( 3386): Detected ART runtime04-11 22:36:26.089 I/Xposed ( 3386): Found Xposed class &apos;de/robv/android/xposed/XposedBridge&apos;, now initializing04-11 22:36:26.158 I/Xposed ( 3386): Loading modules from /data/app/com.zed.xposed.demo-1/base.apk04-11 22:36:26.158 E/Xposed ( 3386): Cannot load module:04-11 22:36:26.158 E/Xposed ( 3386): The Xposed API classes are compiled into the module&apos;s APK.04-11 22:36:26.158 E/Xposed ( 3386): This may cause strange issues and must be fixed by the module developer.04-11 22:36:26.158 E/Xposed ( 3386): For details, see: http://api.xposed.info/using.html 说了那么多废话了 总结一下就是 如果你没有正常出现以下界面，请多多注意是不是你的依赖jar没有配置好 不要急 以上是一个入门级 新手的入坑记录","comments":true}]